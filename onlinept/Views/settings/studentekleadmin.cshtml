@model onlinept.Models.Entity.student

@{
    ViewBag.Title = "Öğrenci Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.link = "student";
    ViewBag.menuactive = "Ayarlar";
}


<div class="content-wrapper">
    <div class="card-header">
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        @using (Html.BeginForm("studentekle", "Home", FormMethod.Post, new { @enctype = "multipart/from-data" }))
        {
        <table id="example1" class="table table-bordered table-striped">
            <tr>
                <td>
                    <p>Eğitmen Seç</p>
                    @Html.HiddenFor(m => m.mylistget, new { id = "colordbse", @Value = "", @class = "form-control", @required = "required" })
                    <select id="colordbe" class="form-control">
                        <option value=""></option>
                        @foreach (var coach in ViewBag.CoachList)
                        {
                            <option value="@coach.userid">@coach.name</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td>
                    <p>Öğrenci Seç</p>
                    @Html.HiddenFor(m => m.usersget, new { id = "colordbs", @Value = "", @class = "form-control", @required = "required" })
                    <select id="colordb" class="form-control">
                        <option value=""></option>
                        @foreach (var user in ViewBag.UserList)
                        {
                            <option value="@user.userid">@user.name</option>
                        }
                    </select>
                </td>
                <td>
                    <p>Tarih</p>
                    @Html.EditorFor(m => m.date, new { htmlAttributes = new { @class = "form-control", id = "tarih1", placeholder = "Lütfen Başlangıç Tarihi Giriniz.", @required = "required" } })

                </td>
            </tr>
            <tr>
                <td>
                    <p>Boy </p>
                    @Html.TextBoxFor(m => m.height, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "3", @required = "required" })
                </td>
                <td>
                    <p>Kilo</p>
                    @Html.TextBoxFor(m => m.weight, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Yaş </p>
                    @Html.TextBoxFor(m => m.age, new { @class = "form-control", maxlength = "2", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Cinsiyet</p>
                    @Html.HiddenFor(m => m.gender, new { @class = "form-control", @Value = "Erkek", id = "genderdbs", @required = "required" })
                    <select id="genderdb" class="form-control">
                        <option value="1">Erkek</option>
                        <option value="2">Kadin</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>
                    <p>Total Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.bodyfat, new { @class = "form-control", maxlength = "2", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Kas Oranı</p>
                    @Html.TextBoxFor(m => m.bodymuscle, new { @class = "form-control", maxlength = "2", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Boyun Bölgesi Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatneck, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Bel Bölgesi Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatbody, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sol Kol Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatlarm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sağ Kol Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatrarm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sol Bacak Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatlleg, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sağ Bacak Yağ Oranı</p>
                    @Html.TextBoxFor(m => m.fatrleg, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Boyun Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.neck, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Omuz Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.shoulder, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Göğüs Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.chest, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sol Üst Kol Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.larm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sol Ön Kol Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.lfarm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sağ Üst Kol Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.rarm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sağ Ön Kol Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.rfarm, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Bel Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.waist, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Kalça Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.hip, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sol Üst Bacak Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.lleg, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sol Alt Bacak Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.lcalves, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>Sağ Üst Bacak Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.rleg, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Sağ Alt Bacak Ölçüsü /cm</p>
                    @Html.TextBoxFor(m => m.rcalves, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
                <td>
                    <p>İç Bacak Boyu /cm</p>
                    @Html.TextBoxFor(m => m.inseam, new { @class = "form-control", maxlength = "3", oninput = "Number(this.id);", @required = "required" })
                </td>
            </tr>
            <tr>
                <td>
                    <p>Protein /gr</p>
                    @Html.TextBoxFor(m => m.protein, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "3", @required = "required" })

                </td>
                <td>
                    <p>Carb /gr</p>
                    @Html.TextBoxFor(m => m.carb, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "3", @required = "required" })

                </td>
            </tr>
            <tr>
                <td>
                    <p>Yağ /gr</p>
                    @Html.TextBoxFor(m => m.fat, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "3", @required = "required" })

                </td>
                <td>
                    <p>Kalori /cal</p>
                    @Html.TextBoxFor(m => m.calori, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "4", @required = "required" })

                </td>
            </tr>
            <tr>
                <td>
                    <p>Kalori Açığı/cal</p>
                    @Html.TextBoxFor(m => m.caloriedeficit, new { @class = "form-control", oninput = "Number(this.id);", maxlength = "4", @required = "required" })
                    @Html.HiddenFor(m => m.viewkey, new { oninput = "Number(this.id);", maxlength = "8", @id = "viewkey", @class = "form-control", @Value = "", @readonly = "false" })
                    @Html.TextBoxFor(m => m.studentid, new { oninput = "Number(this.id);", maxlength = "9", @id = "viewkey1", @class = "form-control", @Value = "", @readonly = "false" })

                </td>
            </tr>
            <tr>
                <td>
                    <p>Önden Fotoğraf</p>
                    <div class="btn btn-primary">
                        @Html.TextBoxFor(m => m.content1, new { type = "file", id = "imageBrowes", onchange = "ValidateSingleInput(this);", @required = "required" })
                    </div>
                    <hr />
                    <b><font color="orangered"><span id="errorfile"></span></font></b>
                    <b><font color="orangered"><span id="errortype"></span></font></b>
                    <div id="imgPreview" class="thumbnail" style="display:none;">
                        <img class="img-responsive" id="targetImg" style="width:100px; height:100px;" />
                        <div class="caption">
                            <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                            <span id="description"></span>
                        </div>
                    </div>
                </td>
                <td>
                    <p>Yandan Fotoğraf</p>
                    <div class="btn btn-primary">
                        @Html.TextBoxFor(m => m.content2, new { type = "file", id = "imageBrowes2", onchange = "ValidateSingleInput2(this);", @required = "required" })
                    </div>
                    <hr />
                    <b><font color="orangered"><span id="errorfile2"></span></font></b>
                    <b><font color="orangered"><span id="errortype2"></span></font></b>
                    <div id="imgPreview2" class="thumbnail" style="display:none;">
                        <img class="img-responsive" id="targetImg2" style="width:100px; height:100px;" />
                        <div class="caption">
                            <a href="#" onclick="ClearPreview2()"><i class="glyphicon glyphicon-trash"></i></a>
                            <span id="description2"></span>
                        </div>
                    </div>

                </td>
            </tr>
            <tr>
                <td>
                    <p>Arkadan Görünüm</p>
                    <div class="btn btn-primary">
                        @Html.TextBoxFor(m => m.content3, new { type = "file", id = "imageBrowes3", onchange = "ValidateSingleInput3(this);", @required = "required" })
                    </div>
                    <hr />
                    <b><font color="orangered"><span id="errorfile3"></span></font></b>
                    <b><font color="orangered"><span id="errortype3"></span></font></b>
                    <div id="imgPreview3" class="thumbnail" style="display:none;">
                        <img class="img-responsive" id="targetImg3" style="width:100px; height:100px;" />
                        <div class="caption">
                            <a href="#" onclick="ClearPreview3()"><i class="glyphicon glyphicon-trash"></i></a>
                            <span id="description3"></span>
                        </div>
                    </div>

                </td>
            </tr>
            <tr>
                <td><button type="submit" onclick="Uploadimage(); Uploadimage2(); Uploadimage3()" class="fa fa-floppy-o btn btn-success" /> Kaydet</td>
            </tr>
        </table>

        }
    </div>
    <!-- /.card-body -->
</div>
<!-- /.card -->
<script src="~/Content/Admin/plugins/custom/jquery-ui.js"></script>
<script src="~/Content/Admin/plugins/custom/oasiscustom.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        oasisdatepicker();

    });
    document.getElementById("viewkey").value = viewkey();
    document.getElementById("viewkey1").value = viewkey();
</script>


<script>
    var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];

    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;
            var numb = $(this)[0].files[0].size / 1024 / 1024;
            numb = numb.toFixed(2);
            if (numb > 2) {
                $("#errortype").text('');
                $("#errorfile").text('Max dosya boyutu 2 MB! Dosyanız: ' + numb + ' MB');
                $("#imageBrowes").val('');
                $("#description").text('');
                $("#imgPreview").hide();
            }
            else {
                if (File && File[0]) {
                    ReadImage(File[0]);
                }
                $("#errortype").text('');
                $("#errorfile").text('');

            }

        })

    })

    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 2048) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    }

    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();



    }

    var Uploadimage = function () {

        var file = $("#imageBrowes").get(0).files;

        var data = new FormData;
        data.append("content1file", file[0]);

        $.ajax({

            type: "Post",
            url: "/Home/sImageUpload",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                ClearPreview();
            }

        })
    }
    function ValidateSingleInput(oInput) {
        if (oInput.type == "file") {
            var sFileName = oInput.value;
            if (sFileName.length > 0) {
                var blnValid = false;
                for (var j = 0; j < _validFileExtensions2.length; j++) {
                    var sCurExtension = _validFileExtensions2[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                        blnValid = true;
                        break;
                    }

                }



                if (!blnValid) {
                    $("#errortype").text('Seçilen dosya ".jpg", ".jpeg", ".bmp", ".gif", ".png" uzantılı olmak zorundadır.');
                    oInput.value = "";
                    $("#errorfile").text('');
                    $("#imageBrowes").val('');
                    $("#description").text('');
                    $("#imgPreview").hide();
                    return false;
                }
            }
        }
        return true;
    }

</script>

<script>
    var _validFileExtensions2 = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
    $(document).ready(function () {

        $("#imageBrowes2").change(function () {

            var File = this.files;
            var numb = $(this)[0].files[0].size / 1024 / 1024;
            numb = numb.toFixed(2);
            if (numb > 2) {
                $("#errortype2").text('');
                $("#errorfile2").text('Max dosya boyutu 2 MB! Dosyanız: ' + numb + ' MB');
                $("#imageBrowes2").val('');
                $("#description2").text('');
                $("#imgPreview2").hide();
            }
            else {
                if (File && File[0]) {
                    ReadImage2(File[0]);
                }
                $("#errortype2").text('');
                $("#errorfile2").text('');

            }

        })

    })

    var ReadImage2 = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 2048) + "KB";

                $("#targetImg2").attr('src', _file.target.result);
                $("#description2").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview2").show();

            }

        }

    }

    var ClearPreview2 = function () {
        $("#imageBrowes2").val('');
        $("#description2").text('');
        $("#imgPreview2").hide();



    }

    var Uploadimage2 = function () {

        var file = $("#imageBrowes2").get(0).files;

        var data = new FormData;
        data.append("content2file", file[0]);

        $.ajax({

            type: "Post",
            url: "/Home/s2ImageUpload",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                ClearPreview2();
            }

        })
    }
    function ValidateSingleInput2(oInput) {
        if (oInput.type == "file") {
            var sFileName = oInput.value;
            if (sFileName.length > 0) {
                var blnValid = false;
                for (var j = 0; j < _validFileExtensions2.length; j++) {
                    var sCurExtension = _validFileExtensions2[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                        blnValid = true;
                        break;
                    }

                }



                if (!blnValid) {
                    $("#errortype2").text('Seçilen dosya ".jpg", ".jpeg", ".bmp", ".gif", ".png" uzantılı olmak zorundadır.');
                    oInput.value = "";
                    $("#errorfile2").text('');
                    $("#imageBrowes2").val('');
                    $("#description2").text('');
                    $("#imgPreview2").hide();
                    return false;
                }
            }
        }
        return true;
    }
</script>

<script>
    var _validFileExtensions3 = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
    $(document).ready(function () {

        $("#imageBrowes3").change(function () {

            var File = this.files;
            var numb = $(this)[0].files[0].size / 1024 / 1024;
            numb = numb.toFixed(2);
            if (numb > 2) {
                $("#errortype3").text('');
                $("#errorfile3").text('Max dosya boyutu 2 MB! Dosyanız: ' + numb + ' MB');
                $("#imageBrowes3").val('');
                $("#description3").text('');
                $("#imgPreview3").hide();
            }
            else {
                if (File && File[0]) {
                    ReadImage3(File[0]);
                }
                $("#errortype3").text('');
                $("#errorfile3").text('');

            }

        })

    })

    var ReadImage3 = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 2048) + "KB";

                $("#targetImg3").attr('src', _file.target.result);
                $("#description3").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview3").show();

            }

        }

    }

    var ClearPreview3 = function () {
        $("#imageBrowes3").val('');
        $("#description3").text('');
        $("#imgPreview3").hide();



    }

    var Uploadimage3 = function () {

        var file = $("#imageBrowes3").get(0).files;

        var data = new FormData;
        data.append("content3file", file[0]);

        $.ajax({

            type: "Post",
            url: "/Home/s3ImageUpload",
            data: data,
            contentType: false,
            processData: false,
            success: function (response) {
                ClearPreview3();
            }

        })
    }
    function ValidateSingleInput3(oInput) {
        if (oInput.type == "file") {
            var sFileName = oInput.value;
            if (sFileName.length > 0) {
                var blnValid = false;
                for (var j = 0; j < _validFileExtensions2.length; j++) {
                    var sCurExtension = _validFileExtensions2[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                        blnValid = true;
                        break;
                    }

                }



                if (!blnValid) {
                    $("#errortype3").text('Seçilen dosya ".jpg", ".jpeg", ".bmp", ".gif", ".png" uzantılı olmak zorundadır.');
                    oInput.value = "";
                    $("#errorfile3").text('');
                    $("#imageBrowes3").val('');
                    $("#description3").text('');
                    $("#imgPreview3").hide();
                    return false;
                }
            }
        }
        return true;
    }
</script>




